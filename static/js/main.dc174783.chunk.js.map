{"version":3,"sources":["components/commonComponents/InputComponent.js","components/addChart/AddChartComponent.js","components/chartsList/chart/chart.service.js","components/chartsList/chart/ChartComponent.js","components/chartsList/ChartsListComponent.js","App.js","index.js"],"names":["Input","id","value","saveAction","placeholder","useState","active","setActive","className","onClick","onBlur","e","target","type","onChange","stopPropagation","inputValue","htmlFor","AddChart","setCharts","aParam","setAParam","bParam","setBParam","nParam","setNParam","variation","setVariation","autoComplete","onSubmit","event","preventDefault","newChart","shortid","generate","a","b","length","charts","sumArray","arr","reduce","sum","val","calculateModelYArray","idealYArray","map","idealY","min","max","Math","floor","random","calculateAParam","U","Y","arr1","arr2","newArr","i","push","getProductOfArrays","pow","getPow2ArrayValues","calculateParams","a_param","calculateBParam","modelAParam","Number","toFixed","modelBParam","calculateModelElements","idealA","idealB","UArray","u_arr","generateUArray","input","generateIdealYArray","modelYArray","identificationQuality","calculateIdentificationQuality","Chart","chartId","setUArray","YArray","setYArray","params","setParams","useEffect","Object","keys","lineFirstPoint","lineLastPoint","c3","bindto","size","width","data","xs","output","lineOutput","columns","types","legend","show","style","height","prevCharts","filter","prevChart","ChartsList","chart","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc174783.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst Input = ({ id, value, saveAction, placeholder }) => {\n  const [active, setActive] = useState(false);\n\n  const handleChange = (e) => {\n    e.stopPropagation();\n    const inputValue = e.target.value;\n    saveAction(inputValue);\n  };\n\n  const handleBlur = (e) => (e.target.value === '' ? setActive(false) : null);\n\n  return (\n    <div className=\"field\" onClick={() => setActive(true)} onBlur={handleBlur}>\n      <input id={id} type=\"text\" value={value} onChange={handleChange} />\n      <label className={active ? 'active-label' : ''} htmlFor={id}>\n        {placeholder}\n      </label>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useState } from 'react';\nimport shortid from 'shortid';\n\nimport Input from '../commonComponents/InputComponent';\n\nconst AddChart = ({ setCharts }) => {\n  const [aParam, setAParam] = useState('');\n  const [bParam, setBParam] = useState('');\n  const [nParam, setNParam] = useState('');\n  const [variation, setVariation] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newChart = {\n      id: shortid.generate(),\n      a: +aParam,\n      b: +bParam,\n      length: +nParam,\n      variation: +variation,\n    };\n\n    setCharts((charts) => [...charts, newChart]);\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      className=\"add-chart-wrapper\"\n      onSubmit={handleSubmit}\n    >\n      <h4>Type parameters of ideal function</h4>\n      <div className=\"parameters-wrapper\">\n        <Input\n          id=\"a_param\"\n          value={aParam}\n          saveAction={setAParam}\n          placeholder=\"Parameter a\"\n        />\n        <Input\n          id=\"b_param\"\n          value={bParam}\n          saveAction={setBParam}\n          placeholder=\"Parameter b\"\n        />\n      </div>\n\n      <h4>Parameters of generated input and output arrays</h4>\n      <div className=\"parameters-wrapper\">\n        <Input\n          id=\"n_param\"\n          value={nParam}\n          saveAction={setNParam}\n          placeholder=\"Array length\"\n        />\n        <Input\n          id=\"variation\"\n          value={variation}\n          saveAction={setVariation}\n          placeholder=\"Variation\"\n        />\n      </div>\n      <button className=\"button\">Add chart</button>\n    </form>\n  );\n};\n\nexport default AddChart;\n","function getRandomInRange(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction outputOfLinearFunction(input, aParam, bParam) {\n  return aParam * input + bParam;\n}\n\nfunction sumArray(arr) {\n  return arr.reduce((sum, val) => sum + val, 0);\n}\n\nfunction generateUArray(length) {\n  const u_arr = [];\n\n  for (let i = 0; i < length; i++) {\n    u_arr.push(i + 1);\n  }\n\n  return u_arr;\n}\n\nfunction generateIdealYArray(UArray, idealA, idealB) {\n  const newArr = [];\n  for (let i = 0; i < UArray.length; i++) {\n    newArr.push(outputOfLinearFunction(UArray[i], idealA, idealB));\n  }\n  return newArr;\n}\n\nexport function calculateModelYArray(idealYArray, variation) {\n  return idealYArray.map((idealY) =>\n    getRandomInRange(idealY - variation, idealY + variation)\n  );\n}\n\nfunction getProductOfArrays(arr1, arr2) {\n  const newArr = [];\n  for (let i = 0; i < arr1.length; i++) {\n    newArr.push(arr1[i] * arr2[i]);\n  }\n  return newArr;\n}\n\nfunction getPow2ArrayValues(arr) {\n  const newArr = [];\n  for (let i = 0; i < arr.length; i++) {\n    newArr.push(Math.pow(arr[i], 2));\n  }\n  return newArr;\n}\n\nfunction calculateAParam(U, Y) {\n  return (\n    (U.length * sumArray(getProductOfArrays(U, Y)) -\n      sumArray(U) * sumArray(Y)) /\n    (U.length * sumArray(getPow2ArrayValues(U)) - Math.pow(sumArray(U), 2))\n  );\n}\n\nfunction calculateBParam(U, Y, a_param) {\n  return (sumArray(Y) - a_param * sumArray(U)) / U.length;\n}\n\nfunction calculateParams(U, Y) {\n  const a = calculateAParam(U, Y);\n\n  const b = calculateBParam(U, Y, a);\n  return {\n    modelAParam: Number(a.toFixed(3)),\n    modelBParam: Number(b.toFixed(3)),\n  };\n}\n\nfunction calculateIdentificationQuality(idealYArray, modelYArray) {\n  const newArr = [];\n\n  for (let i = 0; i < idealYArray.length; i++) {\n    newArr.push(Math.pow(idealYArray[i] - modelYArray[i], 2));\n  }\n\n  return Number((sumArray(newArr) / idealYArray.length).toFixed(3));\n}\n\nexport function calculateModelElements(idealA, idealB, length, variation) {\n  const UArray = generateUArray(length);\n  const idealYArray = generateIdealYArray(UArray, idealA, idealB);\n  const modelYArray = calculateModelYArray(idealYArray, variation);\n  const identificationQuality = calculateIdentificationQuality(\n    idealYArray,\n    modelYArray\n  );\n  const { modelAParam, modelBParam } = calculateParams(UArray, modelYArray);\n\n  const returnObj = {\n    UArray,\n    modelYArray,\n    modelAParam,\n    modelBParam,\n    identificationQuality,\n  };\n\n  return returnObj;\n}\n","import React, { useState, useEffect } from 'react';\nimport c3 from 'c3';\n\nimport { calculateModelElements } from './chart.service';\n\nconst Chart = ({ id, a, b, length, variation, setCharts }) => {\n  const chartId = id && `chart${id}`;\n  const [UArray, setUArray] = useState([]);\n  const [YArray, setYArray] = useState([]);\n  const [params, setParams] = useState({});\n\n  useEffect(() => {\n    const {\n      UArray,\n      modelYArray,\n      modelAParam,\n      modelBParam,\n      identificationQuality,\n    } = calculateModelElements(a, b, length, variation);\n\n    setUArray(UArray);\n    setYArray(modelYArray);\n    setParams({ modelAParam, modelBParam, identificationQuality });\n  }, [a, b, length, variation]);\n\n  useEffect(() => {\n    if (UArray.length && YArray.length && Object.keys(params).length) {\n      const lineFirstPoint = params.modelAParam + params.modelBParam;\n      const lineLastPoint = params.modelAParam * length + params.modelBParam;\n      c3.generate({\n        bindto: `#${chartId}`,\n        size: {\n          width: 400,\n        },\n        data: {\n          xs: {\n            output: 'input',\n            lineOutput: 'lineInput',\n          },\n          columns: [\n            ['input', ...UArray],\n            ['output', ...YArray],\n            ['lineInput', UArray[0], UArray[UArray.length - 1]],\n            ['lineOutput', lineFirstPoint, lineLastPoint],\n          ],\n          type: 'scatter',\n          types: {\n            lineOutput: 'line',\n          },\n        },\n        legend: {\n          show: false,\n        },\n      });\n    }\n  }, [chartId, UArray, YArray, length, params]);\n\n  const handleremoveChart = () =>\n    setCharts((prevCharts) =>\n      prevCharts.filter((prevChart) => prevChart.id !== id)\n    );\n\n  return (\n    <div>\n      <div id={chartId} style={{ width: '100%', height: '90%' }}></div>\n      <h3 className=\"chart-legend\">\n        {Object.keys(params).length\n          ? `Len: ${length}, Var: ${variation},  A: ${params.modelAParam},  B: ${params.modelBParam},  Q: ${params.identificationQuality} `\n          : null}\n        <span className=\"remove-chart\" onClick={handleremoveChart}>\n          Remove chart\n        </span>\n      </h3>\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport './ChartsList.scss';\nimport Chart from './chart/ChartComponent';\n\nconst ChartsList = ({ charts, setCharts }) => {\n  return (\n    <div className=\"charts-grid\">\n      {charts.map((chart) => (\n        <Chart key={chart.id} {...chart} setCharts={setCharts} />\n      ))}\n    </div>\n  );\n};\n\nexport default ChartsList;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport AddChart from './components/addChart/AddChartComponent';\nimport ChartsList from './components/chartsList/ChartsListComponent';\n\nfunction App() {\n  const [charts, setCharts] = useState([]);\n\n  return (\n    <main className=\"App\">\n      <header className=\"header\">\n        <h1>\n          Easy tool to analyse process of calculating parameters for linear\n          function\n        </h1>\n      </header>\n      <section className=\"tool-section\">\n        <div className=\"add-chart-section\">\n          <AddChart setCharts={setCharts} />\n        </div>\n        <div className=\"chart-section\">\n          <ChartsList charts={charts} setCharts={setCharts} />\n        </div>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}